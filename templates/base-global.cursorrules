# Cursor Rules - Base Global Template
# This template contains core rules shared across all workspace directories

## AI ASSISTANT BEHAVIOR REQUIREMENTS - CRITICAL
- **MANDATORY PLANNING APPROVAL**: Before executing any commands, file changes, or automation:
  1. Present a concrete plan with specific steps
  2. Explain potential impacts and risks
  3. Wait for explicit user approval before proceeding
  4. No assumptions - always ask for clarification when uncertain

## MCP SERVER REQUIREMENTS - CRITICAL
- **AWS Operations**: When creating plans involving AWS, consult AWS MCP servers for guidance on:
  - Cost effectiveness and optimization recommendations
  - Security best practices and compliance requirements
  - Service selection and configuration best practices
  - This includes guidance for: EC2, S3, IAM, CloudFormation, Route53, and all other AWS services
- **Terraform Operations**: When creating infrastructure plans, consult HashiCorp's Terraform MCP servers for guidance on:
  - Cost effectiveness and resource optimization
  - Security configurations and best practices
  - Infrastructure design patterns and recommendations
  - This applies to all infrastructure-as-code planning and implementation

## LOGGING REQUIREMENTS - CRITICAL
- ALL scripts must log to: $LOG_DIR/ (resolved from environment configuration)
- Use appropriate subdirectories for different script categories: $LOG_DIR/[script-name]/
- Log file naming convention: `script-name.log` (single continuous log file per script)
- Use log rotation to manage file size (logrotate or similar)
- Include log levels: INFO, WARN, ERROR, DEBUG
- Log both successful operations and errors
- Always include timestamps in log entries
- Append to existing log file - do NOT create new files for each run

## GLOBAL EXECUTION TRACKING - CRITICAL
- ALL scripts must integrate with global execution tracker if available
- Source GLOBAL_LOGGER environment variable if set: `source "$GLOBAL_LOGGER" || true`
- This provides centralized tracking of all script executions across the workspace

## SCRIPT ORGANIZATION POLICY - CRITICAL
- **PRIMARY DIRECTORIES**:
  - `$WORK_DIR/projects/` - Structured development projects and applications
  - `$WORK_DIR/scripts/` - Development, experimental, and utility scripts

- **DEFAULT LOCATION**: All new scripts should be created in `$WORK_DIR/scripts/` by default
- **ORGANIZATION PRINCIPLE**: 
  - Projects directory for structured, multi-file applications (like devops-toolkit-installer, aws-cli-jobox, cursor-rules-manager)
  - Scripts directory for utilities, automation, and experimental code
  
## ENVIRONMENT CONFIGURATION - CRITICAL
- **Global Parameters**: Source `$WORK_DIR/global-parameters.env` for environment variables
- **Required Variables**: WORK_DIR, LOG_DIR, REPORTS_DIR, BACKUP_DIR, SHARED_LIBRARIES_DIR
- **AWS Integration**: Use $AWS_CLI_CONFIG and $AWS_TAGGING_LIB for AWS operations
- **Global Logging**: Use $GLOBAL_LOGGER for centralized execution tracking